<views:MvxWpfView x:Class="PiggsCare.UI.Views.ShellView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:animalForm="clr-namespace:PiggsCare.UI.Forms.Animals"
                  xmlns:animalViewModels="clr-namespace:PiggsCare.Core.ViewModels.Animals;assembly=PiggsCare.Core"
                  xmlns:breedingEventForm="clr-namespace:PiggsCare.UI.Forms.Breeding"
                  xmlns:breedingEventViewModel="clr-namespace:PiggsCare.Core.ViewModels.Breeding;assembly=PiggsCare.Core"
                  xmlns:components="clr-namespace:PiggsCare.UI.Components"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:farrowEventForm="clr-namespace:PiggsCare.UI.Forms.Farrowing"
                  xmlns:farrowEventViewModel="clr-namespace:PiggsCare.Core.ViewModels.Farrowing;assembly=PiggsCare.Core"
                  xmlns:healthRecordViewModel="clr-namespace:PiggsCare.Core.ViewModels.HealthRecords;assembly=PiggsCare.Core"
                  xmlns:healthRecordsForm="clr-namespace:PiggsCare.UI.Forms.HealthRecords"
                  xmlns:local="clr-namespace:PiggsCare.UI.Views"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:modalDialogControl="clr-namespace:ModalDialogControl;assembly=ModalDialogControl"
                  xmlns:pregnancyForm="clr-namespace:PiggsCare.UI.Forms.Pregnancy"
                  xmlns:pregnancyViewModel="clr-namespace:PiggsCare.Core.ViewModels.Pregnancy;assembly=PiggsCare.Core"
                  xmlns:removalForm="clr-namespace:PiggsCare.UI.Forms.Removal"
                  xmlns:removalViewModel="clr-namespace:PiggsCare.Core.ViewModels.Removal;assembly=PiggsCare.Core"
                  xmlns:synchronizationEventViewModel="clr-namespace:PiggsCare.Core.ViewModels.Synchronization;assembly=PiggsCare.Core"
                  xmlns:synchronizationForm="clr-namespace:PiggsCare.UI.Forms.Synchronization"
                  xmlns:viewModels="clr-namespace:PiggsCare.Core.ViewModels;assembly=PiggsCare.Core"
                  xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                  xmlns:weaningForm="clr-namespace:PiggsCare.UI.Forms.Weaning"
                  xmlns:weaningViewModel="clr-namespace:PiggsCare.Core.ViewModels.Weaning;assembly=PiggsCare.Core"
                  x:Name="Home"
                  d:DataContext="{d:DesignInstance Type=viewModels:ShellViewModel}"
                  d:DesignHeight="600"
                  d:DesignWidth="1100"
                  Loaded="ShellView_OnLoaded"
                  mc:Ignorable="d">

    <views:MvxWpfView.Resources>
        <DataTemplate DataType="{x:Type viewModels:HomeViewModel}">
            <local:HomeView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:AnalyticsViewModel}">
            <local:AnalyticsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:NotificationViewModel}">
            <local:NotificationView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:EstrusViewModel}">
            <local:EstrusView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:SynchronizationViewModel}">
            <local:Synchronization />
        </DataTemplate>

        <DataTemplate DataType="{x:Type animalViewModels:AnimalListingViewModel}">
            <components:AnimalListing />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:DashboardViewModel}">
            <components:Dashboard />
        </DataTemplate>

        <DataTemplate DataType="{x:Type healthRecordViewModel:HealthListingViewModel}">
            <components:HealthListing />
        </DataTemplate>

        <DataTemplate DataType="{x:Type synchronizationEventViewModel:SynchronizationListingViewModel}">
            <components:SynchronizationListing />
        </DataTemplate>

        <DataTemplate DataType="{x:Type breedingEventViewModel:BreedingEventListingViewModel}">
            <components:BreedingListing />
        </DataTemplate>

        <DataTemplate DataType="{x:Type farrowEventViewModel:FarrowListingViewModel}">
            <components:FarrowListing />
        </DataTemplate>

        <DataTemplate DataType="{x:Type pregnancyViewModel:PregnancyListingViewModel}">
            <components:PregnancyListing />
        </DataTemplate>

        <DataTemplate DataType="{x:Type weaningViewModel:WeaningListingViewModel}">
            <components:WeaningListing />
        </DataTemplate>

        <DataTemplate DataType="{x:Type removalViewModel:RemovalListingViewModel}">
            <components:RemovalListing />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:SelectedAnimalDetailsViewModel}">
            <components:SelectedAnimalDetails />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:SelectedBatchDetailsViewModel}">
            <components:SelectedBatchDetails />
        </DataTemplate>

        <DataTemplate DataType="{x:Type animalViewModels:AnimalCreateFormViewModel}">
            <animalForm:AnimalCreateForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type animalViewModels:AnimalModifyFormViewModel}">
            <animalForm:AnimalModifyForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type animalViewModels:AnimalDeleteFormViewModel}">
            <animalForm:AnimalDeleteForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type healthRecordViewModel:HealthRecordCreateFormViewModel}">
            <healthRecordsForm:HealthRecordCreateForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type healthRecordViewModel:HealthRecordModifyFormViewModel}">
            <healthRecordsForm:HealthRecordModifyForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type healthRecordViewModel:HealthRecordDeleteFormViewModel}">
            <healthRecordsForm:HealthRecordDeleteForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type breedingEventViewModel:BreedingEventCreateFormViewModel}">
            <breedingEventForm:BreedingEventCreateForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type breedingEventViewModel:BreedingEventModifyFormViewModel}">
            <breedingEventForm:BreedingEventModifyForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type breedingEventViewModel:BreedingEventDeleteFormViewModel}">
            <breedingEventForm:BreedingEventDeleteForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type farrowEventViewModel:FarrowingCreateFormViewModel}">
            <farrowEventForm:FarrowingCreateForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type farrowEventViewModel:FarrowingModifyFormViewModel}">
            <farrowEventForm:FarrowingModifyForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type farrowEventViewModel:FarrowingDeleteFormViewModel}">
            <farrowEventForm:FarrowingDeleteForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type pregnancyViewModel:PregnancyCreateFormViewModel}">
            <pregnancyForm:PregnancyCreateForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type pregnancyViewModel:PregnancyModifyFormViewModel}">
            <pregnancyForm:PregnancyModifyForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type pregnancyViewModel:PregnancyDeleteFormViewModel}">
            <pregnancyForm:PregnancyDeleteForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type weaningViewModel:WeaningCreateFormViewModel}">
            <weaningForm:WeaningCreateForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type weaningViewModel:WeaningModifyFormViewModel}">
            <weaningForm:WeaningModifyForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type weaningViewModel:WeaningDeleteFormViewModel}">
            <weaningForm:WeaningDeleteForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type removalViewModel:RemovalEventCreateFormViewModel}">
            <removalForm:RemovalEventCreateForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type removalViewModel:RemovalEventModifyFormViewModel}">
            <removalForm:RemovalEventModifyForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type removalViewModel:RemovalEventDeleteFormViewModel}">
            <removalForm:RemovalEventDeleteForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type synchronizationEventViewModel:SynchronizationEventCreateFormViewModel}">
            <synchronizationForm:SynchronizationEventCreateForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type synchronizationEventViewModel:SynchronizationEventModifyFormViewModel}">
            <synchronizationForm:SynchronizationEventModifyForm />
        </DataTemplate>

        <DataTemplate DataType="{x:Type synchronizationEventViewModel:SynchronizationEventDeleteFormViewModel}">
            <synchronizationForm:SynchronizationEventDeleteForm />
        </DataTemplate>


    </views:MvxWpfView.Resources>

    <Border UseLayoutRounding="True">
        <Grid>
            <Grid.OpacityMask>
                <VisualBrush Visual="{Binding ElementName=Border}" />
            </Grid.OpacityMask>

            <!-- <modalControl:Modal Panel.ZIndex="10" IsOpen="{Binding IsModalOpen, UpdateSourceTrigger=PropertyChanged}"> -->
            <!--     <ContentControl Margin="50,25" Content="{Binding CurrentModalViewModel}" /> -->
            <!-- </modalControl:Modal> -->

            <modalDialogControl:ModalDialog Panel.ZIndex="1"
                                            IsOpen="{Binding IsModalOpen, UpdateSourceTrigger=PropertyChanged}"
                                            TheBackground="{DynamicResource TertiaryBackgroundColor}"
                                            TheShadow="{DynamicResource SecondaryWhiteColor}">
                <ContentControl Margin="30,15" Content="{Binding CurrentModalViewModel}" />
            </modalDialogControl:ModalDialog>


            <Border x:Name="Border"
                    Background="{DynamicResource PrimaryBackgroundColor}"
                    CornerRadius="10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  Start Navigation-Pane  -->
                    <Border Grid.Column="0"
                            Padding="10"
                            Background="{DynamicResource SecondaryBackgroundColor}"
                            CornerRadius="10 0 0 10">

                        <Grid x:Name="GridMenu">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="80" />
                            </Grid.RowDefinitions>

                            <!--  Logo  -->
                            <StackPanel Grid.Row="0" Orientation="Horizontal">
                                <Image Width="36"
                                       Height="36"
                                       Margin="10,0,0,0"
                                       VerticalAlignment="Center"
                                       Source="/Assets/Icons/logo.png"
                                       Stretch="Fill" />

                                <Label Margin="5,0,0,0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       HorizontalContentAlignment="Left"
                                       Content="PiggsCare"
                                       FontSize="24"
                                       FontWeight="Bold"
                                       Foreground="{DynamicResource SecondaryBlueColor}" />
                            </StackPanel>

                            <!--  Start Navigation Buttons  -->
                            <StackPanel Grid.Row="1">
                                <RadioButton Margin="0,30,0,0"
                                             Command="{Binding NavigateToAnalytics}"
                                             Content="Analytics"
                                             IsChecked="True"
                                             Style="{DynamicResource MenuRadioButtonStyle}"
                                             Tag="{DynamicResource Analytics}" />

                                <RadioButton Margin="0,1,0,1"
                                             Command="{Binding NavigateToHome}"
                                             Content="Home"
                                             Style="{DynamicResource MenuRadioButtonStyle}"
                                             Tag="{DynamicResource Home}" />

                                <RadioButton Margin="0,1,0,1"
                                             Command="{Binding NavigateToSynchronization}"
                                             Content="Synchronizations"
                                             Style="{DynamicResource MenuRadioButtonStyle}"
                                             Tag="{DynamicResource Collections}" />


                                <Separator Margin="20,20" Background="{DynamicResource TertiaryBackgroundColor}" />

                                <RadioButton Margin="0,1,0,1"
                                             Command="{Binding NavigateToNotifications}"
                                             Content="Notifications"
                                             Style="{DynamicResource MenuRadioButtonStyle}"
                                             Tag="{DynamicResource Notifications}" />

                            </StackPanel>
                            <!--  End Navigation Buttons  -->

                            <!--  Start Theme Switcher  -->
                            <Path Grid.Row="2"
                                  Margin="20,0,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Data="{DynamicResource Information}"
                                  Fill="{DynamicResource TertiaryTextColor}" />

                            <Border Grid.Row="2"
                                    Width="110"
                                    Height="35"
                                    Margin="0,0,20,0"
                                    HorizontalAlignment="Right"
                                    Background="{DynamicResource TertiaryBackgroundColor}"
                                    CornerRadius="18">
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Path Width="16"
                                          Height="16"
                                          VerticalAlignment="Center"
                                          Data="{DynamicResource Sun}"
                                          Fill="{DynamicResource PrimaryYellowColor}"
                                          Stretch="UniformToFill" />
                                    <ToggleButton x:Name="Themes"
                                                  Margin="10,0,10,0"
                                                  HorizontalAlignment="Right"
                                                  Click="Themes_Click"
                                                  IsChecked="False"
                                                  Style="{DynamicResource ToggleButtonStyle}" />
                                    <Path Width="16"
                                          Height="16"
                                          VerticalAlignment="Center"
                                          Data="{DynamicResource Moon}"
                                          Fill="{DynamicResource PrimaryWhiteColor}"
                                          Stretch="Fill" />
                                </StackPanel>
                                <!--<Border.BitmapEffect>
        <DropShadowBitmapEffect
                        ShadowDepth="1"
                        Direction="0"
                        Color="#5B8DEF"
                        Softness="0.8"/>
    </Border.BitmapEffect>-->
                            </Border>
                            <!--  End Theme Switcher  -->
                        </Grid>

                    </Border>
                    <!--  End Navigation-Pane  -->

                    <!--  Start Main-Content  -->
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <!--  Start: Button to Close | Restore | Minimize  -->
                        <StackPanel Grid.Row="0"
                                    Height="30"
                                    Margin="0,5,10,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    FlowDirection="RightToLeft"
                                    MouseLeftButtonDown="UIElement_OnMouseLeftButtonDown"
                                    Orientation="Horizontal">

                            <Button x:Name="CloseButton"
                                    Click="CloseButton_OnClick"
                                    Content="{DynamicResource Close}"
                                    Style="{StaticResource IconButtonsStyle}"
                                    Tag="IsCloseButton" />

                            <Button x:Name="RestoreButton"
                                    Margin="5,0"
                                    Click="RestoreButton_OnClick">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource IconButtonsStyle}" TargetType="{x:Type Button}">
                                        <Setter Property="Content" Value="{DynamicResource Maximize}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=_isRestored}" Value="false">
                                                <Setter Property="Content" Value="{DynamicResource Restore}" />
                                            </DataTrigger>

                                            <!-- <DataTrigger Binding="{Binding ElementName=_parentWindow, Path=WindowState}" Value="Maximized"> -->
                                            <!--     <Setter Property="Content" Value="{DynamicResource Restore}" /> -->
                                            <!-- </DataTrigger> -->
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <Button x:Name="MinimizeButton"
                                    Click="MinimizeButton_OnClick"
                                    Content="{DynamicResource Minimize}"
                                    Style="{StaticResource IconButtonsStyle}" />
                        </StackPanel>
                        <!--  End: Button to Close | Restore | Minimize  -->

                        <ContentControl Grid.Row="1"
                                        Margin="10"
                                        Content="{Binding CurrentViewModel}" />
                    </Grid>
                    <!--  End Main-Content  -->
                </Grid>
            </Border>
        </Grid>
    </Border>

</views:MvxWpfView>